syntax = "proto3";

package decomx.pantheon;

message LinkedData {
    enum DataType {
        PLAIN_TEXT = 0;
        IPFS_HASH = 1;
        WEB_URL = 2;
    }
    DataType type = 1;
    string value = 2;
}

message User {
    bytes ethereumAddress = 1;
    string name = 2;
    map<string, string> contacts = 3;
    LinkedData details = 4;
}

message TaskDetails {
    LinkedData details = 1;
    uint64 ownerDeposit = 2;
    uint64 workerDeposit = 3;
    uint64 ownerPay = 4; // default to be 0
    uint64 workerPay = 5; // default to be owner deposit + worker deposit
}

message TaskOp {
    enum OpType {
        OWNER_UPDATE = 0; // task update before accept
        WORKER_ACCEPT = 1;
        REQUEST_CHANGE = 2;
        REQUEST_FINAL_REVIEW = 3;
        RECALL = 4;
        APPROVE = 5;
        REJECT = 6;
        CLAIM = 7; // quit the task and claim money
    }
    OpType type = 1;
    uint32 index = 2;
    uint64 deadline = 3;
    string comments = 4; // extra comments, normally a hash of ipfs
    TaskDetails override = 5; // request change
}

message Task {
    enum TaskStatus {
        PENDING_ACCEPT = 0;
        PENDING_WORKER_PROOF = 1;
        PENDING_CHANGE_REVIEW = 2;
        PENDING_FINAL_REVIEW = 3;
        CLOSED = 4; // task finished or cancelled
    }
    TaskDetails details = 1;
    TaskStatus status = 2;
    bytes owner = 3;
    bytes worker = 4;
    repeated TaskOp op = 5;
}
